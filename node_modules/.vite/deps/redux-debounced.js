import {
  __commonJS
} from "./chunk-2TUXWMP5.js";

// node_modules/redux-debounced/lib/index.js
var require_lib = __commonJS({
  "node_modules/redux-debounced/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function() {
      var timers = {};
      var middleware = function middleware2() {
        return function(dispatch) {
          return function(action) {
            var _action$meta = action.meta;
            _action$meta = _action$meta === void 0 ? {} : _action$meta;
            var _action$meta$debounce = _action$meta.debounce, debounce = _action$meta$debounce === void 0 ? {} : _action$meta$debounce, type = action.type;
            var time = debounce.time, _debounce$key = debounce.key, key = _debounce$key === void 0 ? type : _debounce$key, _debounce$cancel = debounce.cancel, cancel = _debounce$cancel === void 0 ? false : _debounce$cancel, _debounce$leading = debounce.leading, leading = _debounce$leading === void 0 ? false : _debounce$leading, _debounce$trailing = debounce.trailing, trailing = _debounce$trailing === void 0 ? true : _debounce$trailing;
            var shouldDebounce = (time && key || cancel && key) && (trailing || leading);
            var dispatchNow = leading && !timers[key];
            var later = function later2(resolve) {
              return function() {
                if (trailing && !dispatchNow) {
                  resolve(dispatch(action));
                }
                timers[key] = null;
              };
            };
            if (!shouldDebounce) {
              return dispatch(action);
            }
            if (timers[key]) {
              clearTimeout(timers[key]);
              timers[key] = null;
            }
            if (!cancel) {
              return new Promise(function(resolve) {
                if (dispatchNow) {
                  resolve(dispatch(action));
                }
                timers[key] = setTimeout(later(resolve), time);
              });
            }
          };
        };
      };
      middleware._timers = timers;
      return middleware;
    };
  }
});
export default require_lib();
//# sourceMappingURL=redux-debounced.js.map
